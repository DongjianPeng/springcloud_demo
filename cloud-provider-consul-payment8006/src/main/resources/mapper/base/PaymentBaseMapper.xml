<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.murphypen.springcloud.mapper.base.PaymentBaseMapper">


    <insert id="insertPayment"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `payment`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="serial!=null">
                        `serial`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="serial!=null">
                    #{serial},
                </if>
        </trim>
        )
    </insert>




    <update id="updatePayment">
        UPDATE `payment`
        SET
        <trim suffixOverrides=",">
            <if test="serial != null and serial!=''">
                `serial` = #{serial},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `payment`
        SET
        <trim suffixOverrides=",">
        <if test="set.serial != null and set.serial!=''">
            `serial` = #{set.serial},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.serialList != null">
                    `serial` in
                    <foreach collection="where.serialList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzySerial!=null and where.fuzzySerial.size()>0">
                (
                <foreach collection="where.fuzzySerial"  separator="or" item="item">
                    `Serial` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzySerial!=null and where.rightFuzzySerial.size()>0">
                (
                <foreach collection="where.rightFuzzySerial"  separator="or" item="item">
                    `Serial` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
        </trim>
    </update>


    <resultMap type="model.Payment" id="PaymentMap">
        <result property="id" column="id"/>
        <result property="serial" column="serial"/>
    </resultMap>


    <select id="queryPayment" resultMap="PaymentMap">
        select
        <include refid="baseResult"></include>
        from  `payment`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="serial != null and serial!=''">
                `serial` = #{serial} and
            </if>
            <if test = "(_parameter instanceof model.Payment$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="serialList != null">
                    `serial` in
                    <foreach collection="serialList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzySerial!=null and fuzzySerial.size()>0">
                    (
                    <foreach collection="fuzzySerial"  separator="or" item="item">
                        `Serial` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzySerial!=null and rightFuzzySerial.size()>0">
                    (
                    <foreach collection="rightFuzzySerial"  separator="or" item="item">
                        `Serial` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryPaymentLimit1" resultMap="PaymentMap">
        select
        <include refid="baseResult"></include>
        from  `payment`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="serial != null and serial!=''">
                `serial` = #{serial} and
            </if>
            <if test = "(_parameter instanceof model.Payment$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="serialList != null">
                        `serial` in
                        <foreach collection="serialList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzySerial!=null and fuzzySerial.size()>0">
                    (
                    <foreach collection="fuzzySerial"  separator="or" item="item">
                        `Serial` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzySerial!=null and rightFuzzySerial.size()>0">
                    (
                    <foreach collection="rightFuzzySerial"  separator="or" item="item">
                        `Serial` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `serial`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof model.Payment$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.serial==true">
                        `serial`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.serial==null">
                        `serial`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof model.Payment$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>